diamonds2
view(diamonds2)
library('ggplot2')
diamonds2
diamonds
view(diamonds)
view(diamonds)
library('ggplot2')
diamonds
view(diamonds)
library('ggplot2')
diamonds <- diamonds2
view(diamonds)
dim(diamonds)
ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut))
diamonds %>% count(cut)
library('dplyr')
diamonds %>% count(cut)
library('ggplot2')
diamonds
diamonds %>% count(cut)
library('dplyr')
diamonds %>% count(cut)
smaller <- diamonds %>% filter(carat, 0.5)
library('dplyr')
install.packages("dplyr")
library('dplyr')
diamonds %>% count(cut)
smaller <- diamonds %>% filter(carat, 0.5)
smaller <- diamonds %>% filter(carat < 0.5)
)
ggplot(data = smaller, mapping = aes(x = carat)) + geom_histogram(binwidth = 0.1, color = "black", fill = "gray")
ggplot(data = smaller, mapping = aes(x = carat, color = cut)) + geom_freqpoly(binwidth = 0.1)
diamonds2 <- diamonds %>%
filter(between(y,3,20))
diamonds2 <- diamonds %>%
filter(between(y,3,20))
diamonds2 <- diamonds %>% filter(between(y,3,20))
nrow(diamonds2)
diamonds2 <- diamonds %.% mutate(y = ifelse(y <3 | y > 20), NA, y)
diamonds2 <- diamonds %>% mutate(y = ifelse(y <3 | y > 20), NA, y)
diamonds2 <- diamonds %>% mutate(y = ifelse(y <3 | y > 20), NA, y))
diamonds2 <- diamonds %>% mutate(y = ifelse(y <3 | y > 20), NA, y)
diamonds2 <- diamonds %>%
mutate (y = ifelse (y < 3 | y > 20, NA, y))
nrow(diamonds2)
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) + geom_boxplot()
ggplot(data = mpg) + geom_boxplot(mapping = aes(x = reorder(class, hwy, FUN = median), y = hwy))
library(tidyverse)
#install the packages
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
read.csv("C:/Users/thaye/OneDrive/Documents/IT 2023.2/Data Exploration/CA1-DataExploration/covid_data_2023")
getwd()
setwd(C:/Users/thaye/OneDrive/Documents/IT 2023.2/Data Exploration/CA1-DataExploration/covid_data_2023.csv)
setwd("C:/Users/thaye/OneDrive/Documents/IT 2023.2/Data Exploration/CA1-DataExploration/covid_data_2023.csv")
getwd()
install.packages(c("tidyverse","dummy","caTools","conflicted"))
library(conflicted)
library(tidyverse)
library(dummy)
library(caTools)
getwd()
setwd("C:/Users/thaye/OneDrive/Documents/IT 2023.2/Data Exploration/CA1-DataExploration/")
covid_dataset_2023 <-read_csv(file="covid_data_2023.csv")
covid <-read_csv(file="covid_data_2023.csv")
head(covid)
head(covid_dataset_2023)
View (covid)
install.packages("skimr")
library(skimr)
# Skim the dataset
skimmed_dataset <- skim(covid_dataset_2023)
# Print the skim summary
print(skimmed_dataset)
skim(iris)
# Skim the dataset
skimmed_dataset <- skim(covid_dataset_2023)
#Based on Tutorial 5
install.packages(c("tidyverse","dummy","caTools","conflicted"))
covid_df <- read_csv(file="covid_data_2023.csv")
#Sourced from: https://teacherscollege.screenstepslive.com/a/1127011-display-your-data-in-r-studio
View (covid_df)
colSums(is.na(covid_df))
# Skim the dataset
skimmed_df <- skim(covid_data_2023)
# Skim the dataset
skimmed_df <- skim(covid__df)
# Print the skim summary
print(skimmed_df)
library(conflicted)
library(tidyverse)
library(dummy)
library(caTools)
library(skimr)
covid_df <- read_csv(file="covid_data_2023.csv")
#Sourced from: https://teacherscollege.screenstepslive.com/a/1127011-display-your-data-in-r-studio
View (covid_df)
colSums(is.na(covid_df))
# Skim the dataset
skimmed_df <- skim(covid__df)
# Print the skim summary
print(skimmed_df)
# Skim the dataset
skimmed_df <- skim(covid_df)
# Print the skim summary
print(skimmed_df)
glimpse (covid_df)
summary (covid_df)
preprocess_df <- preProcess(covid_df[,c(4,6,8,9)], method = c('center', 'scale'))
library(caret)
install.packages("caret")
library(caret)
preprocess_df <- preProcess(covid_df[,c(4,6,8,9)], method = c('center', 'scale'))
data <- predict(preprocess_df, covid_df[,c(4,6,8,9)])
summary (data)
numeric_columns <- covid_df[,c(4,6,8,9)]
cleaned_data <- na.omit(numeric_columns)
preprocess_df <- preProcess(covid_df[,c(4,6,8,9)], method = c('center', 'scale'))
data <- predict(preprocess_df, covid_df[,c(4,6,8,9)])
summary (data)
covid_df.pca <- prcomp(cleaned_data, center = TRUE, scale. = TRUE)
summary (covid_df.pca)
library(ggplot2)
#question d
# Line plot
ggplot(df, aes(x = year_week, y = weekly_count, color = indicator)) +
geom_line() +
labs(title = "Line Plot: Correlation between year_week and weekly_count")
# Scatter plot
ggplot(df, aes(x = year_week, y = weekly_count, color = indicator)) +
geom_point() + geom_point(size=2, color="Blue")
#question d
# Line plot
ggplot(covid_df, aes(x = year_week, y = weekly_count, color = indicator)) +
geom_line() +
labs(title = "Line Plot: Correlation between year_week and weekly_count")
# Scatter plot
ggplot(covid_df, aes(x = year_week, y = weekly_count, color = indicator)) +
geom_point() + geom_point(size=2, color="Blue")
# Heatmap
ggplot(covid_df, aes(x = year_week, y = indicator, fill = weekly_count)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +
labs(title = "Heatmap: Correlation between year_week, indicator, and weekly_count")
ggplot(covid_df, aes(x=country, y= rate_14_day
)) + geom_point(size=2, color="Blue")
ggplot(covid_df, aes(x=rate_14_day, y= country
)) + geom_point(size=4, color="Blue")
ggplot(covid_df, aes(x=rate_14_day, y= country
)) + geom_point(size=1, color="Blue")
plot_data %>%
ggplot() +
geom_histogram(
mapping = aes(x = weekly_count),
bins = 30,
fill = "blue",
color = "black"
) +
labs(title = "Histogram of Weekly Count", x = "Weekly Count", y = "Frequency") +
theme_minimal() +
theme(text = element_text(size = 14))
covid_df %>%
ggplot() +
geom_histogram(
mapping = aes(x = weekly_count),
bins = 30,
fill = "blue",
color = "black"
) +
labs(title = "Histogram of Weekly Count", x = "Weekly Count", y = "Frequency") +
theme_minimal() +
theme(text = element_text(size = 14))
covid_df %>%
ggplot() +
geom_point(
mapping = aes(x = rate_14_day),
bins = 30,
fill = "blue",
color = "black"
) +
labs(title = "14 days rate", x = "rate_14_day", y = "country") +
theme_minimal() +
theme(text = element_text(size = 14))
covid_df %>%
ggplot() +
geom_point(
mapping = aes(x = rate_14_day, y = country),
size = 1,
color = "blue"
) +
labs(title = "14 days rate", x = "rate_14_day", y = "country") +
theme_minimal() +
theme(text = element_text(size = 14))
# Create a red lineplot in ggplot2 
ggplot(covid_df, aes(x = rate_14_day, y = country)) +
geom_line(color = "red")
# Create a red lineplot in ggplot2 
ggplot(covid_df, aes(x = rate_14_day, y = country)) +
geom_line(color = "red") +
labs(title = "14 days rate", x = "rate_14_day", y = "country")
ggplot(covid_df, aes(x = rate_14_day, y = country, fill = value)) +
geom_tile() +
labs(title = "14 days rate",
x = "14 days rate",
y = "country")
ggplot(covid_df, aes(x = year_week, y = country, fill = weekly_count)) +
geom_tile() +
labs(title = "Weekly Counts by Country and Week",
x = "Year-Week",
y = "Country")
ggplot(covid_df, aes(x = rate_14_day, y = country, fill = weekly_count)) +
geom_tile() +
labs(title = "Weekly Counts by Country and Week",
x = "Year-Week",
y = "Country")
# Create a red lineplot in ggplot2 
ggplot(covid_df, aes(x = rate_14_day, y = year_week
)) +
geom_line(color = "red") +
labs(title = "14 days rate", x = "rate_14_day", y = "country")
# Create a red lineplot in ggplot2 
ggplot(covid_df, aes(x = rate_14_day, y = country)) +
geom_line(color = "red") +
labs(title = "14 days rate", x = "rate_14_day", y = "country")
ggplot(covid_df, aes(x = rate_14_day, y = country, fill = weekly_count)) +
geom_tile() +
labs(title = "Weekly Counts by Country and Week",
x = "Year-Week",
y = "Country")
ggplot(covid_df, aes(x = country, y = weekly_count, fill = rate_14_day)) +
geom_tile() +
labs(title = "Weekly Counts by Country and Week",
x = "Year-Week",
y = "Country")
#heatmap
ggplot(covid_df, aes(x = country, y = year_week, fill = rate_14_day)) +
geom_tile() +
labs(title = "Heatmap of 14-Day Rates by Country and Week",
x = "Country",
y = "Year-Week")
#heatmap
ggplot(covid_df, aes(x = year_week, y = country, fill = rate_14_day)) +
geom_tile() +
labs(title = "Heatmap of 14-Day Rates by Country and Week",
x = "Country",
y = "Year-Week")
